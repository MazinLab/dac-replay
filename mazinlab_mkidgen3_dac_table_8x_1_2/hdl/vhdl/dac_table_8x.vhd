-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dac_table_8x is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    table_r_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    table_r_ce0 : OUT STD_LOGIC;
    table_r_q0 : IN STD_LOGIC_VECTOR (255 downto 0);
    iout_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    iout_TVALID : OUT STD_LOGIC;
    iout_TREADY : IN STD_LOGIC;
    iout_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    iout_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    iout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    qout_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    qout_TVALID : OUT STD_LOGIC;
    qout_TREADY : IN STD_LOGIC;
    qout_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    qout_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    qout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iqout_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    iqout_TVALID : OUT STD_LOGIC;
    iqout_TREADY : IN STD_LOGIC;
    iqout_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
    iqout_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    iqout_TUSER : OUT STD_LOGIC_VECTOR (7 downto 0);
    iqout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of dac_table_8x is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dac_table_8x_dac_table_8x,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.237000,HLS_SYN_LAT=65548,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=120,HLS_SYN_LUT=164,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal iout_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal qout_TDATA_blk_n : STD_LOGIC;
    signal iqout_TDATA_blk_n : STD_LOGIC;
    signal sample_group1_reg_239 : STD_LOGIC_VECTOR (15 downto 0);
    signal iqtmp_user_V_fu_258_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_io : BOOLEAN;
    signal regslice_both_iout_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_qout_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iqout_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal iqtmp_user_V_reg_491_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_491_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln28_fu_262_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln28_reg_502 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln28_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_reg_507 : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tlast_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_phi_mux_sample_group1_phi_fu_243_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln28_fu_253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_14_fu_442_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_432_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_422_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_412_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_402_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_392_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_382_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_372_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_362_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_352_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_342_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_332_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_322_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_312_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_302_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_2_fu_298_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal iout_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal iout_TVALID_int_regslice : STD_LOGIC;
    signal iout_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iout_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iout_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iout_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iout_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iout_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iout_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iout_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iout_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iout_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iout_V_last_V_U_vld_out : STD_LOGIC;
    signal qout_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal qout_TVALID_int_regslice : STD_LOGIC;
    signal qout_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_qout_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_qout_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_qout_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_qout_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_qout_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_qout_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_qout_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_qout_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_qout_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_qout_V_last_V_U_vld_out : STD_LOGIC;
    signal iqout_TDATA_int_regslice : STD_LOGIC_VECTOR (255 downto 0);
    signal iqout_TVALID_int_regslice : STD_LOGIC;
    signal iqout_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iqout_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iqout_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iqout_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iqout_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iqout_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iqout_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iqout_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iqout_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iqout_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iqout_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iqout_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iqout_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iqout_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_condition_214 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component dac_table_8x_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_iout_V_data_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iout_TDATA_int_regslice,
        vld_in => iout_TVALID_int_regslice,
        ack_in => iout_TREADY_int_regslice,
        data_out => iout_TDATA,
        vld_out => regslice_both_iout_V_data_V_U_vld_out,
        ack_out => iout_TREADY,
        apdone_blk => regslice_both_iout_V_data_V_U_apdone_blk);

    regslice_both_iout_V_keep_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv16_0,
        vld_in => iout_TVALID_int_regslice,
        ack_in => regslice_both_iout_V_keep_V_U_ack_in_dummy,
        data_out => iout_TKEEP,
        vld_out => regslice_both_iout_V_keep_V_U_vld_out,
        ack_out => iout_TREADY,
        apdone_blk => regslice_both_iout_V_keep_V_U_apdone_blk);

    regslice_both_iout_V_strb_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv16_0,
        vld_in => iout_TVALID_int_regslice,
        ack_in => regslice_both_iout_V_strb_V_U_ack_in_dummy,
        data_out => iout_TSTRB,
        vld_out => regslice_both_iout_V_strb_V_U_vld_out,
        ack_out => iout_TREADY,
        apdone_blk => regslice_both_iout_V_strb_V_U_apdone_blk);

    regslice_both_iout_V_last_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => set_tlast_fu_274_p2,
        vld_in => iout_TVALID_int_regslice,
        ack_in => regslice_both_iout_V_last_V_U_ack_in_dummy,
        data_out => iout_TLAST,
        vld_out => regslice_both_iout_V_last_V_U_vld_out,
        ack_out => iout_TREADY,
        apdone_blk => regslice_both_iout_V_last_V_U_apdone_blk);

    regslice_both_qout_V_data_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => qout_TDATA_int_regslice,
        vld_in => qout_TVALID_int_regslice,
        ack_in => qout_TREADY_int_regslice,
        data_out => qout_TDATA,
        vld_out => regslice_both_qout_V_data_V_U_vld_out,
        ack_out => qout_TREADY,
        apdone_blk => regslice_both_qout_V_data_V_U_apdone_blk);

    regslice_both_qout_V_keep_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv16_0,
        vld_in => qout_TVALID_int_regslice,
        ack_in => regslice_both_qout_V_keep_V_U_ack_in_dummy,
        data_out => qout_TKEEP,
        vld_out => regslice_both_qout_V_keep_V_U_vld_out,
        ack_out => qout_TREADY,
        apdone_blk => regslice_both_qout_V_keep_V_U_apdone_blk);

    regslice_both_qout_V_strb_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv16_0,
        vld_in => qout_TVALID_int_regslice,
        ack_in => regslice_both_qout_V_strb_V_U_ack_in_dummy,
        data_out => qout_TSTRB,
        vld_out => regslice_both_qout_V_strb_V_U_vld_out,
        ack_out => qout_TREADY,
        apdone_blk => regslice_both_qout_V_strb_V_U_apdone_blk);

    regslice_both_qout_V_last_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => set_tlast_fu_274_p2,
        vld_in => qout_TVALID_int_regslice,
        ack_in => regslice_both_qout_V_last_V_U_ack_in_dummy,
        data_out => qout_TLAST,
        vld_out => regslice_both_qout_V_last_V_U_vld_out,
        ack_out => qout_TREADY,
        apdone_blk => regslice_both_qout_V_last_V_U_apdone_blk);

    regslice_both_iqout_V_data_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iqout_TDATA_int_regslice,
        vld_in => iqout_TVALID_int_regslice,
        ack_in => iqout_TREADY_int_regslice,
        data_out => iqout_TDATA,
        vld_out => regslice_both_iqout_V_data_V_U_vld_out,
        ack_out => iqout_TREADY,
        apdone_blk => regslice_both_iqout_V_data_V_U_apdone_blk);

    regslice_both_iqout_V_keep_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv32_0,
        vld_in => iqout_TVALID_int_regslice,
        ack_in => regslice_both_iqout_V_keep_V_U_ack_in_dummy,
        data_out => iqout_TKEEP,
        vld_out => regslice_both_iqout_V_keep_V_U_vld_out,
        ack_out => iqout_TREADY,
        apdone_blk => regslice_both_iqout_V_keep_V_U_apdone_blk);

    regslice_both_iqout_V_strb_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv32_0,
        vld_in => iqout_TVALID_int_regslice,
        ack_in => regslice_both_iqout_V_strb_V_U_ack_in_dummy,
        data_out => iqout_TSTRB,
        vld_out => regslice_both_iqout_V_strb_V_U_vld_out,
        ack_out => iqout_TREADY,
        apdone_blk => regslice_both_iqout_V_strb_V_U_apdone_blk);

    regslice_both_iqout_V_user_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iqtmp_user_V_reg_491_pp0_iter11_reg,
        vld_in => iqout_TVALID_int_regslice,
        ack_in => regslice_both_iqout_V_user_V_U_ack_in_dummy,
        data_out => iqout_TUSER,
        vld_out => regslice_both_iqout_V_user_V_U_vld_out,
        ack_out => iqout_TREADY,
        apdone_blk => regslice_both_iqout_V_user_V_U_apdone_blk);

    regslice_both_iqout_V_last_V_U : component dac_table_8x_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => set_tlast_fu_274_p2,
        vld_in => iqout_TVALID_int_regslice,
        ack_in => regslice_both_iqout_V_last_V_U_ack_in_dummy,
        data_out => iqout_TLAST,
        vld_out => regslice_both_iqout_V_last_V_U_vld_out,
        ack_out => iqout_TREADY,
        apdone_blk => regslice_both_iqout_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    sample_group1_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln28_reg_507 = ap_const_lv1_0))) then 
                sample_group1_reg_239 <= add_ln28_reg_502;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln28_reg_507 = ap_const_lv1_1)))) then 
                sample_group1_reg_239 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1))) then
                add_ln28_reg_502 <= add_ln28_fu_262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln28_reg_507 <= icmp_ln28_fu_268_p2;
                iqtmp_user_V_reg_491 <= iqtmp_user_V_fu_258_p1;
                iqtmp_user_V_reg_491_pp0_iter1_reg <= iqtmp_user_V_reg_491;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                iqtmp_user_V_reg_491_pp0_iter10_reg <= iqtmp_user_V_reg_491_pp0_iter9_reg;
                iqtmp_user_V_reg_491_pp0_iter11_reg <= iqtmp_user_V_reg_491_pp0_iter10_reg;
                iqtmp_user_V_reg_491_pp0_iter2_reg <= iqtmp_user_V_reg_491_pp0_iter1_reg;
                iqtmp_user_V_reg_491_pp0_iter3_reg <= iqtmp_user_V_reg_491_pp0_iter2_reg;
                iqtmp_user_V_reg_491_pp0_iter4_reg <= iqtmp_user_V_reg_491_pp0_iter3_reg;
                iqtmp_user_V_reg_491_pp0_iter5_reg <= iqtmp_user_V_reg_491_pp0_iter4_reg;
                iqtmp_user_V_reg_491_pp0_iter6_reg <= iqtmp_user_V_reg_491_pp0_iter5_reg;
                iqtmp_user_V_reg_491_pp0_iter7_reg <= iqtmp_user_V_reg_491_pp0_iter6_reg;
                iqtmp_user_V_reg_491_pp0_iter8_reg <= iqtmp_user_V_reg_491_pp0_iter7_reg;
                iqtmp_user_V_reg_491_pp0_iter9_reg <= iqtmp_user_V_reg_491_pp0_iter8_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln28_fu_262_p2 <= std_logic_vector(unsigned(ap_phi_mux_sample_group1_phi_fu_243_p6) + unsigned(ap_const_lv16_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, regslice_both_iout_V_data_V_U_apdone_blk, regslice_both_qout_V_data_V_U_apdone_blk, regslice_both_iqout_V_data_V_U_apdone_blk, iout_TREADY_int_regslice, qout_TREADY_int_regslice, iqout_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and ((regslice_both_iqout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_qout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iout_V_data_V_U_apdone_blk = ap_const_logic_1) or (iqout_TREADY_int_regslice = ap_const_logic_0) or (qout_TREADY_int_regslice = ap_const_logic_0) or (iout_TREADY_int_regslice = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and ((iqout_TREADY_int_regslice = ap_const_logic_0) or (qout_TREADY_int_regslice = ap_const_logic_0) or (iout_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_block_state14_io, regslice_both_iout_V_data_V_U_apdone_blk, regslice_both_qout_V_data_V_U_apdone_blk, regslice_both_iqout_V_data_V_U_apdone_blk, ap_block_state15_io, iout_TREADY_int_regslice, qout_TREADY_int_regslice, iqout_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and ((regslice_both_iqout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_qout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iout_V_data_V_U_apdone_blk = ap_const_logic_1) or (iqout_TREADY_int_regslice = ap_const_logic_0) or (qout_TREADY_int_regslice = ap_const_logic_0) or (iout_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state15_io))) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and ((iqout_TREADY_int_regslice = ap_const_logic_0) or (qout_TREADY_int_regslice = ap_const_logic_0) or (iout_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state14_io))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_block_state14_io, regslice_both_iout_V_data_V_U_apdone_blk, regslice_both_qout_V_data_V_U_apdone_blk, regslice_both_iqout_V_data_V_U_apdone_blk, ap_block_state15_io, iout_TREADY_int_regslice, qout_TREADY_int_regslice, iqout_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and ((regslice_both_iqout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_qout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iout_V_data_V_U_apdone_blk = ap_const_logic_1) or (iqout_TREADY_int_regslice = ap_const_logic_0) or (qout_TREADY_int_regslice = ap_const_logic_0) or (iout_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state15_io))) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and ((iqout_TREADY_int_regslice = ap_const_logic_0) or (qout_TREADY_int_regslice = ap_const_logic_0) or (iout_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state14_io))));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_io_assign_proc : process(iout_TREADY_int_regslice, qout_TREADY_int_regslice, iqout_TREADY_int_regslice)
    begin
                ap_block_state14_io <= ((iqout_TREADY_int_regslice = ap_const_logic_0) or (qout_TREADY_int_regslice = ap_const_logic_0) or (iout_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state14_pp0_stage0_iter12_assign_proc : process(iout_TREADY_int_regslice, qout_TREADY_int_regslice, iqout_TREADY_int_regslice)
    begin
                ap_block_state14_pp0_stage0_iter12 <= ((iqout_TREADY_int_regslice = ap_const_logic_0) or (qout_TREADY_int_regslice = ap_const_logic_0) or (iout_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state15_io_assign_proc : process(iout_TREADY_int_regslice, qout_TREADY_int_regslice, iqout_TREADY_int_regslice)
    begin
                ap_block_state15_io <= ((iqout_TREADY_int_regslice = ap_const_logic_0) or (qout_TREADY_int_regslice = ap_const_logic_0) or (iout_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state15_pp0_stage0_iter13_assign_proc : process(regslice_both_iout_V_data_V_U_apdone_blk, regslice_both_qout_V_data_V_U_apdone_blk, regslice_both_iqout_V_data_V_U_apdone_blk, iout_TREADY_int_regslice, qout_TREADY_int_regslice, iqout_TREADY_int_regslice)
    begin
                ap_block_state15_pp0_stage0_iter13 <= ((regslice_both_iqout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_qout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iout_V_data_V_U_apdone_blk = ap_const_logic_1) or (iqout_TREADY_int_regslice = ap_const_logic_0) or (qout_TREADY_int_regslice = ap_const_logic_0) or (iout_TREADY_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_214_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_214 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_sample_group1_phi_fu_243_p6_assign_proc : process(sample_group1_reg_239, add_ln28_reg_502, icmp_ln28_reg_507, ap_condition_214)
    begin
        if ((ap_const_boolean_1 = ap_condition_214)) then
            if ((icmp_ln28_reg_507 = ap_const_lv1_1)) then 
                ap_phi_mux_sample_group1_phi_fu_243_p6 <= ap_const_lv16_0;
            elsif ((icmp_ln28_reg_507 = ap_const_lv1_0)) then 
                ap_phi_mux_sample_group1_phi_fu_243_p6 <= add_ln28_reg_502;
            else 
                ap_phi_mux_sample_group1_phi_fu_243_p6 <= sample_group1_reg_239;
            end if;
        else 
            ap_phi_mux_sample_group1_phi_fu_243_p6 <= sample_group1_reg_239;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    icmp_ln28_fu_268_p2 <= "1" when (ap_phi_mux_sample_group1_phi_fu_243_p6 = ap_const_lv16_FFFF) else "0";

    iout_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0, ap_enable_reg_pp0_iter13, iout_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)))) then 
            iout_TDATA_blk_n <= iout_TREADY_int_regslice;
        else 
            iout_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iout_TDATA_int_regslice <= table_r_q0(128 - 1 downto 0);
    iout_TVALID <= regslice_both_iout_V_data_V_U_vld_out;

    iout_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            iout_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iout_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    iqout_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0, ap_enable_reg_pp0_iter13, iqout_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)))) then 
            iqout_TDATA_blk_n <= iqout_TREADY_int_regslice;
        else 
            iqout_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iqout_TDATA_int_regslice <= (((((((((((((((tmp_14_fu_442_p4 & tmp_13_fu_432_p4) & tmp_12_fu_422_p4) & tmp_11_fu_412_p4) & tmp_10_fu_402_p4) & tmp_1_fu_392_p4) & tmp_9_fu_382_p4) & tmp_6_fu_372_p4) & tmp_3_fu_362_p4) & tmp_s_fu_352_p4) & tmp_8_fu_342_p4) & tmp_7_fu_332_p4) & tmp_5_fu_322_p4) & tmp_4_fu_312_p4) & tmp_2_fu_302_p4) & trunc_ln674_2_fu_298_p1);
    iqout_TVALID <= regslice_both_iqout_V_data_V_U_vld_out;

    iqout_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            iqout_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iqout_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    iqtmp_user_V_fu_258_p1 <= ap_phi_mux_sample_group1_phi_fu_243_p6(8 - 1 downto 0);

    qout_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0, ap_enable_reg_pp0_iter13, qout_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)))) then 
            qout_TDATA_blk_n <= qout_TREADY_int_regslice;
        else 
            qout_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    qout_TDATA_int_regslice <= table_r_q0(255 downto 128);
    qout_TVALID <= regslice_both_qout_V_data_V_U_vld_out;

    qout_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            qout_TVALID_int_regslice <= ap_const_logic_1;
        else 
            qout_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    set_tlast_fu_274_p2 <= "1" when (iqtmp_user_V_reg_491_pp0_iter11_reg = ap_const_lv8_FF) else "0";
    table_r_address0 <= zext_ln28_fu_253_p1(16 - 1 downto 0);

    table_r_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            table_r_ce0 <= ap_const_logic_1;
        else 
            table_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_402_p4 <= table_r_q0(223 downto 208);
    tmp_11_fu_412_p4 <= table_r_q0(111 downto 96);
    tmp_12_fu_422_p4 <= table_r_q0(239 downto 224);
    tmp_13_fu_432_p4 <= table_r_q0(127 downto 112);
    tmp_14_fu_442_p4 <= table_r_q0(255 downto 240);
    tmp_1_fu_392_p4 <= table_r_q0(95 downto 80);
    tmp_2_fu_302_p4 <= table_r_q0(143 downto 128);
    tmp_3_fu_362_p4 <= table_r_q0(191 downto 176);
    tmp_4_fu_312_p4 <= table_r_q0(31 downto 16);
    tmp_5_fu_322_p4 <= table_r_q0(159 downto 144);
    tmp_6_fu_372_p4 <= table_r_q0(79 downto 64);
    tmp_7_fu_332_p4 <= table_r_q0(47 downto 32);
    tmp_8_fu_342_p4 <= table_r_q0(175 downto 160);
    tmp_9_fu_382_p4 <= table_r_q0(207 downto 192);
    tmp_s_fu_352_p4 <= table_r_q0(63 downto 48);
    trunc_ln674_2_fu_298_p1 <= table_r_q0(16 - 1 downto 0);
    zext_ln28_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_sample_group1_phi_fu_243_p6),64));
end behav;
