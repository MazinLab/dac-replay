-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dac_table_axim is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 128;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    iout_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    iout_TVALID : OUT STD_LOGIC;
    iout_TREADY : IN STD_LOGIC;
    iout_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
    iout_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    iout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    qout_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    qout_TVALID : OUT STD_LOGIC;
    qout_TREADY : IN STD_LOGIC;
    qout_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
    qout_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    qout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iqout_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    iqout_TVALID : OUT STD_LOGIC;
    iqout_TREADY : IN STD_LOGIC;
    iqout_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0);
    iqout_TSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    iqout_TUSER : OUT STD_LOGIC_VECTOR (7 downto 0);
    iqout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of dac_table_axim is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dac_table_axim_dac_table_axim,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=3.906000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.851380,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=3079,HLS_SYN_LUT=1639,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal a : STD_LOGIC_VECTOR (63 downto 0);
    signal length_r : STD_LOGIC_VECTOR (14 downto 0);
    signal tlast : STD_LOGIC;
    signal replay_length : STD_LOGIC_VECTOR (14 downto 0);
    signal run : STD_LOGIC;
    signal replay_length_read_reg_184 : STD_LOGIC_VECTOR (14 downto 0);
    signal tlast_read_reg_189 : STD_LOGIC_VECTOR (0 downto 0);
    signal length_read_reg_194 : STD_LOGIC_VECTOR (14 downto 0);
    signal a_read_reg_199 : STD_LOGIC_VECTOR (63 downto 0);
    signal comb2wide_V_ce0 : STD_LOGIC;
    signal comb2wide_V_q0 : STD_LOGIC_VECTOR (1023 downto 0);
    signal comb2wide_V_ce1 : STD_LOGIC;
    signal comb2wide_V_we1 : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_ap_start : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_ap_done : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_ap_idle : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_ap_ready : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_ce1 : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_we1 : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_d1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_ap_start : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_ap_done : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_ap_idle : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_ap_ready : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TREADY : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TREADY : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TREADY : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TVALID : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TKEEP : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TSTRB : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TVALID : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TKEEP : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TSTRB : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TVALID : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TKEEP : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TUSER : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_comb2wide_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_comb2wide_V_ce0 : STD_LOGIC;
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_run : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dac_table_axim_Pipeline_copy_fu_138_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_dac_table_axim_Pipeline_runloop_fu_148_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal regslice_both_iout_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_qout_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iqout_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state5 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal iout_TVALID_int_regslice : STD_LOGIC;
    signal iout_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iout_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iout_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iout_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iout_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iout_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iout_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iout_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iout_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iout_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iout_V_last_V_U_vld_out : STD_LOGIC;
    signal qout_TVALID_int_regslice : STD_LOGIC;
    signal qout_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_qout_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_qout_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_qout_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_qout_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_qout_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_qout_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_qout_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_qout_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_qout_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_qout_V_last_V_U_vld_out : STD_LOGIC;
    signal iqout_TVALID_int_regslice : STD_LOGIC;
    signal iqout_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iqout_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iqout_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iqout_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iqout_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iqout_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iqout_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iqout_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iqout_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iqout_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iqout_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iqout_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iqout_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iqout_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dac_table_axim_dac_table_axim_Pipeline_copy IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        comb2wide_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        comb2wide_V_ce1 : OUT STD_LOGIC;
        comb2wide_V_we1 : OUT STD_LOGIC;
        comb2wide_V_d1 : OUT STD_LOGIC_VECTOR (1023 downto 0) );
    end component;


    component dac_table_axim_dac_table_axim_Pipeline_runloop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iout_TREADY : IN STD_LOGIC;
        qout_TREADY : IN STD_LOGIC;
        iqout_TREADY : IN STD_LOGIC;
        replay_length : IN STD_LOGIC_VECTOR (14 downto 0);
        iout_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        iout_TVALID : OUT STD_LOGIC;
        iout_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
        iout_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
        iout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        qout_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        qout_TVALID : OUT STD_LOGIC;
        qout_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
        qout_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
        qout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        iqout_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        iqout_TVALID : OUT STD_LOGIC;
        iqout_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0);
        iqout_TSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        iqout_TUSER : OUT STD_LOGIC_VECTOR (7 downto 0);
        iqout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        length_r : IN STD_LOGIC_VECTOR (14 downto 0);
        comb2wide_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        comb2wide_V_ce0 : OUT STD_LOGIC;
        comb2wide_V_q0 : IN STD_LOGIC_VECTOR (1023 downto 0);
        run : IN STD_LOGIC_VECTOR (0 downto 0);
        tlast : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dac_table_axim_comb2wide_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1023 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (1023 downto 0) );
    end component;


    component dac_table_axim_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        a : OUT STD_LOGIC_VECTOR (63 downto 0);
        length_r : OUT STD_LOGIC_VECTOR (14 downto 0);
        tlast : OUT STD_LOGIC;
        replay_length : OUT STD_LOGIC_VECTOR (14 downto 0);
        run : OUT STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component dac_table_axim_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dac_table_axim_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    comb2wide_V_U : component dac_table_axim_comb2wide_V
    generic map (
        DataWidth => 1024,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_dac_table_axim_Pipeline_runloop_fu_148_comb2wide_V_address0,
        ce0 => comb2wide_V_ce0,
        q0 => comb2wide_V_q0,
        address1 => grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_address1,
        ce1 => comb2wide_V_ce1,
        we1 => comb2wide_V_we1,
        d1 => grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_d1);

    grp_dac_table_axim_Pipeline_copy_fu_138 : component dac_table_axim_dac_table_axim_Pipeline_copy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dac_table_axim_Pipeline_copy_fu_138_ap_start,
        ap_done => grp_dac_table_axim_Pipeline_copy_fu_138_ap_done,
        ap_idle => grp_dac_table_axim_Pipeline_copy_fu_138_ap_idle,
        ap_ready => grp_dac_table_axim_Pipeline_copy_fu_138_ap_ready,
        a => a_read_reg_199,
        m_axi_gmem_AWVALID => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => gmem_RLAST,
        m_axi_gmem_RID => gmem_RID,
        m_axi_gmem_RUSER => gmem_RUSER,
        m_axi_gmem_RRESP => gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        comb2wide_V_address1 => grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_address1,
        comb2wide_V_ce1 => grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_ce1,
        comb2wide_V_we1 => grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_we1,
        comb2wide_V_d1 => grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_d1);

    grp_dac_table_axim_Pipeline_runloop_fu_148 : component dac_table_axim_dac_table_axim_Pipeline_runloop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dac_table_axim_Pipeline_runloop_fu_148_ap_start,
        ap_done => grp_dac_table_axim_Pipeline_runloop_fu_148_ap_done,
        ap_idle => grp_dac_table_axim_Pipeline_runloop_fu_148_ap_idle,
        ap_ready => grp_dac_table_axim_Pipeline_runloop_fu_148_ap_ready,
        iout_TREADY => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TREADY,
        qout_TREADY => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TREADY,
        iqout_TREADY => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TREADY,
        replay_length => replay_length_read_reg_184,
        iout_TDATA => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TDATA,
        iout_TVALID => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TVALID,
        iout_TKEEP => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TKEEP,
        iout_TSTRB => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TSTRB,
        iout_TLAST => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TLAST,
        qout_TDATA => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TDATA,
        qout_TVALID => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TVALID,
        qout_TKEEP => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TKEEP,
        qout_TSTRB => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TSTRB,
        qout_TLAST => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TLAST,
        iqout_TDATA => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TDATA,
        iqout_TVALID => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TVALID,
        iqout_TKEEP => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TKEEP,
        iqout_TSTRB => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TSTRB,
        iqout_TUSER => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TUSER,
        iqout_TLAST => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TLAST,
        length_r => length_read_reg_194,
        comb2wide_V_address0 => grp_dac_table_axim_Pipeline_runloop_fu_148_comb2wide_V_address0,
        comb2wide_V_ce0 => grp_dac_table_axim_Pipeline_runloop_fu_148_comb2wide_V_ce0,
        comb2wide_V_q0 => comb2wide_V_q0,
        run => grp_dac_table_axim_Pipeline_runloop_fu_148_run,
        tlast => tlast_read_reg_189);

    control_s_axi_U : component dac_table_axim_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        a => a,
        length_r => length_r,
        tlast => tlast,
        replay_length => replay_length,
        run => run,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component dac_table_axim_gmem_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 128,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 1,
        NUM_WRITE_OUTSTANDING => 1,
        MAX_READ_BURST_LENGTH => 8,
        MAX_WRITE_BURST_LENGTH => 1,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARADDR,
        I_ARID => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARID,
        I_ARLEN => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARLEN,
        I_ARSIZE => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARSIZE,
        I_ARLOCK => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARLOCK,
        I_ARCACHE => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARCACHE,
        I_ARQOS => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARQOS,
        I_ARPROT => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARPROT,
        I_ARUSER => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARUSER,
        I_ARBURST => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARBURST,
        I_ARREGION => grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARREGION,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RID => gmem_RID,
        I_RUSER => gmem_RUSER,
        I_RRESP => gmem_RRESP,
        I_RLAST => gmem_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_WREADY,
        I_WDATA => ap_const_lv128_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv16_0,
        I_BVALID => gmem_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem_BRESP,
        I_BID => gmem_BID,
        I_BUSER => gmem_BUSER);

    regslice_both_iout_V_data_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TDATA,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TVALID,
        ack_in => iout_TREADY_int_regslice,
        data_out => iout_TDATA,
        vld_out => regslice_both_iout_V_data_V_U_vld_out,
        ack_out => iout_TREADY,
        apdone_blk => regslice_both_iout_V_data_V_U_apdone_blk);

    regslice_both_iout_V_keep_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TKEEP,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TVALID,
        ack_in => regslice_both_iout_V_keep_V_U_ack_in_dummy,
        data_out => iout_TKEEP,
        vld_out => regslice_both_iout_V_keep_V_U_vld_out,
        ack_out => iout_TREADY,
        apdone_blk => regslice_both_iout_V_keep_V_U_apdone_blk);

    regslice_both_iout_V_strb_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TSTRB,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TVALID,
        ack_in => regslice_both_iout_V_strb_V_U_ack_in_dummy,
        data_out => iout_TSTRB,
        vld_out => regslice_both_iout_V_strb_V_U_vld_out,
        ack_out => iout_TREADY,
        apdone_blk => regslice_both_iout_V_strb_V_U_apdone_blk);

    regslice_both_iout_V_last_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TLAST,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TVALID,
        ack_in => regslice_both_iout_V_last_V_U_ack_in_dummy,
        data_out => iout_TLAST,
        vld_out => regslice_both_iout_V_last_V_U_vld_out,
        ack_out => iout_TREADY,
        apdone_blk => regslice_both_iout_V_last_V_U_apdone_blk);

    regslice_both_qout_V_data_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TDATA,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TVALID,
        ack_in => qout_TREADY_int_regslice,
        data_out => qout_TDATA,
        vld_out => regslice_both_qout_V_data_V_U_vld_out,
        ack_out => qout_TREADY,
        apdone_blk => regslice_both_qout_V_data_V_U_apdone_blk);

    regslice_both_qout_V_keep_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TKEEP,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TVALID,
        ack_in => regslice_both_qout_V_keep_V_U_ack_in_dummy,
        data_out => qout_TKEEP,
        vld_out => regslice_both_qout_V_keep_V_U_vld_out,
        ack_out => qout_TREADY,
        apdone_blk => regslice_both_qout_V_keep_V_U_apdone_blk);

    regslice_both_qout_V_strb_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TSTRB,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TVALID,
        ack_in => regslice_both_qout_V_strb_V_U_ack_in_dummy,
        data_out => qout_TSTRB,
        vld_out => regslice_both_qout_V_strb_V_U_vld_out,
        ack_out => qout_TREADY,
        apdone_blk => regslice_both_qout_V_strb_V_U_apdone_blk);

    regslice_both_qout_V_last_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TLAST,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TVALID,
        ack_in => regslice_both_qout_V_last_V_U_ack_in_dummy,
        data_out => qout_TLAST,
        vld_out => regslice_both_qout_V_last_V_U_vld_out,
        ack_out => qout_TREADY,
        apdone_blk => regslice_both_qout_V_last_V_U_apdone_blk);

    regslice_both_iqout_V_data_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TDATA,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TVALID,
        ack_in => iqout_TREADY_int_regslice,
        data_out => iqout_TDATA,
        vld_out => regslice_both_iqout_V_data_V_U_vld_out,
        ack_out => iqout_TREADY,
        apdone_blk => regslice_both_iqout_V_data_V_U_apdone_blk);

    regslice_both_iqout_V_keep_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TKEEP,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TVALID,
        ack_in => regslice_both_iqout_V_keep_V_U_ack_in_dummy,
        data_out => iqout_TKEEP,
        vld_out => regslice_both_iqout_V_keep_V_U_vld_out,
        ack_out => iqout_TREADY,
        apdone_blk => regslice_both_iqout_V_keep_V_U_apdone_blk);

    regslice_both_iqout_V_strb_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TSTRB,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TVALID,
        ack_in => regslice_both_iqout_V_strb_V_U_ack_in_dummy,
        data_out => iqout_TSTRB,
        vld_out => regslice_both_iqout_V_strb_V_U_vld_out,
        ack_out => iqout_TREADY,
        apdone_blk => regslice_both_iqout_V_strb_V_U_apdone_blk);

    regslice_both_iqout_V_user_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TUSER,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TVALID,
        ack_in => regslice_both_iqout_V_user_V_U_ack_in_dummy,
        data_out => iqout_TUSER,
        vld_out => regslice_both_iqout_V_user_V_U_vld_out,
        ack_out => iqout_TREADY,
        apdone_blk => regslice_both_iqout_V_user_V_U_apdone_blk);

    regslice_both_iqout_V_last_V_U : component dac_table_axim_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TLAST,
        vld_in => grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TVALID,
        ack_in => regslice_both_iqout_V_last_V_U_ack_in_dummy,
        data_out => iqout_TLAST,
        vld_out => regslice_both_iqout_V_last_V_U_vld_out,
        ack_out => iqout_TREADY,
        apdone_blk => regslice_both_iqout_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dac_table_axim_Pipeline_copy_fu_138_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dac_table_axim_Pipeline_copy_fu_138_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_dac_table_axim_Pipeline_copy_fu_138_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dac_table_axim_Pipeline_copy_fu_138_ap_ready = ap_const_logic_1)) then 
                    grp_dac_table_axim_Pipeline_copy_fu_138_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dac_table_axim_Pipeline_runloop_fu_148_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dac_table_axim_Pipeline_runloop_fu_148_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_dac_table_axim_Pipeline_runloop_fu_148_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dac_table_axim_Pipeline_runloop_fu_148_ap_ready = ap_const_logic_1)) then 
                    grp_dac_table_axim_Pipeline_runloop_fu_148_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                a_read_reg_199 <= a;
                length_read_reg_194 <= length_r;
                replay_length_read_reg_184 <= replay_length;
                tlast_read_reg_189 <= (0=>tlast, others=>'-');
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_dac_table_axim_Pipeline_copy_fu_138_ap_done, grp_dac_table_axim_Pipeline_runloop_fu_148_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5, regslice_both_iout_V_data_V_U_apdone_blk, regslice_both_qout_V_data_V_U_apdone_blk, regslice_both_iqout_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_dac_table_axim_Pipeline_copy_fu_138_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_dac_table_axim_Pipeline_runloop_fu_148_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((regslice_both_iqout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_qout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iout_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_dac_table_axim_Pipeline_copy_fu_138_ap_done)
    begin
        if ((grp_dac_table_axim_Pipeline_copy_fu_138_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_dac_table_axim_Pipeline_runloop_fu_148_ap_done)
    begin
        if ((grp_dac_table_axim_Pipeline_runloop_fu_148_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(regslice_both_iout_V_data_V_U_apdone_blk, regslice_both_qout_V_data_V_U_apdone_blk, regslice_both_iqout_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_iqout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_qout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iout_V_data_V_U_apdone_blk = ap_const_logic_1))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state5_assign_proc : process(regslice_both_iout_V_data_V_U_apdone_blk, regslice_both_qout_V_data_V_U_apdone_blk, regslice_both_iqout_V_data_V_U_apdone_blk)
    begin
                ap_block_state5 <= ((regslice_both_iqout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_qout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iout_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state5, regslice_both_iout_V_data_V_U_apdone_blk, regslice_both_qout_V_data_V_U_apdone_blk, regslice_both_iqout_V_data_V_U_apdone_blk)
    begin
        if ((not(((regslice_both_iqout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_qout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iout_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5, regslice_both_iout_V_data_V_U_apdone_blk, regslice_both_qout_V_data_V_U_apdone_blk, regslice_both_iqout_V_data_V_U_apdone_blk)
    begin
        if ((not(((regslice_both_iqout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_qout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iout_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    comb2wide_V_ce0_assign_proc : process(grp_dac_table_axim_Pipeline_runloop_fu_148_comb2wide_V_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            comb2wide_V_ce0 <= grp_dac_table_axim_Pipeline_runloop_fu_148_comb2wide_V_ce0;
        else 
            comb2wide_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    comb2wide_V_ce1_assign_proc : process(grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            comb2wide_V_ce1 <= grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_ce1;
        else 
            comb2wide_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    comb2wide_V_we1_assign_proc : process(grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_we1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            comb2wide_V_we1 <= grp_dac_table_axim_Pipeline_copy_fu_138_comb2wide_V_we1;
        else 
            comb2wide_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state1, grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem_ARVALID <= grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_state1, grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem_RREADY <= grp_dac_table_axim_Pipeline_copy_fu_138_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    grp_dac_table_axim_Pipeline_copy_fu_138_ap_start <= grp_dac_table_axim_Pipeline_copy_fu_138_ap_start_reg;
    grp_dac_table_axim_Pipeline_runloop_fu_148_ap_start <= grp_dac_table_axim_Pipeline_runloop_fu_148_ap_start_reg;
    grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TREADY <= (iout_TREADY_int_regslice and ap_CS_fsm_state4);
    grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TREADY <= (iqout_TREADY_int_regslice and ap_CS_fsm_state4);
    grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TREADY <= (qout_TREADY_int_regslice and ap_CS_fsm_state4);
    grp_dac_table_axim_Pipeline_runloop_fu_148_run <= (0=>run, others=>'-');
    iout_TVALID <= regslice_both_iout_V_data_V_U_vld_out;
    iout_TVALID_int_regslice <= grp_dac_table_axim_Pipeline_runloop_fu_148_iout_TVALID;
    iqout_TVALID <= regslice_both_iqout_V_data_V_U_vld_out;
    iqout_TVALID_int_regslice <= grp_dac_table_axim_Pipeline_runloop_fu_148_iqout_TVALID;
    qout_TVALID <= regslice_both_qout_V_data_V_U_vld_out;
    qout_TVALID_int_regslice <= grp_dac_table_axim_Pipeline_runloop_fu_148_qout_TVALID;
end behav;
