-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dac_table_8x_dac_table_8x_Pipeline_runloop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    iout_TREADY : IN STD_LOGIC;
    qout_TREADY : IN STD_LOGIC;
    iqout_TREADY : IN STD_LOGIC;
    comb2wide_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    comb2wide_V_ce0 : OUT STD_LOGIC;
    comb2wide_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    run : IN STD_LOGIC;
    iout_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    iout_TVALID : OUT STD_LOGIC;
    iout_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    iout_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    iout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    qout_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    qout_TVALID : OUT STD_LOGIC;
    qout_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    qout_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    qout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iqout_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    iqout_TVALID : OUT STD_LOGIC;
    iqout_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
    iqout_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    iqout_TUSER : OUT STD_LOGIC_VECTOR (7 downto 0);
    iqout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of dac_table_8x_dac_table_8x_Pipeline_runloop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_10F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001111";
    constant ap_const_lv32_18F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001111";
    constant ap_const_lv32_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_12F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_1B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110110000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001111";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_1D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111010000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_16F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101111";
    constant ap_const_lv32_170 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110000";
    constant ap_const_lv32_1F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal p_run_reg_298 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_run_reg_298_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_p_run_phi_fu_301_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal iout_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal qout_TDATA_blk_n : STD_LOGIC;
    signal iqout_TDATA_blk_n : STD_LOGIC;
    signal p_run_reg_298_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_run_reg_298_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_runcache_2_reg_309 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln29_fu_333_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln29_reg_844 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln29_reg_844_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln29_reg_844_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln29_reg_844_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tlast_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tlast_reg_852 : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tlast_reg_852_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tlast_reg_852_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal set_tlast_reg_852_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_run_2_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_run_2_reg_864 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_runcache_fu_374_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal iqtmp_user_V_fu_382_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_874 : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_874_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_874_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_874_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal iq_for2clocks_V_1_reg_879 : STD_LOGIC_VECTOR (511 downto 0);
    signal i_V_fu_391_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal i_V_reg_884 : STD_LOGIC_VECTOR (127 downto 0);
    signal q_V_reg_889 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln674_2_fu_405_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_2_reg_894 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_reg_899 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_reg_904 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_reg_909 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_914 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_reg_919 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_reg_924 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_reg_929 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_934 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_reg_939 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_reg_944 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_reg_949 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_reg_954 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_reg_959 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_reg_964 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_969 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_phi_mux_p_runcache_2_phi_fu_312_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln587_fu_363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_1_fu_214 : STD_LOGIC_VECTOR (15 downto 0);
    signal sample_group_V_fu_327_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_sample_group_V_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_fu_218 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Val2_s_fu_798_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln674_fu_337_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_fu_353_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_s_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_runcache_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_752_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_fu_742_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_732_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_fu_722_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_712_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_702_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_fu_692_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_682_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_672_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_662_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_652_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_642_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_fu_632_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_622_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_612_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_602_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal q_V_1_fu_592_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal i_V_1_fu_582_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_4_fu_762_p17 : STD_LOGIC_VECTOR (255 downto 0);
    signal p_Result_3_fu_562_p17 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_623 : BOOLEAN;
    signal ap_condition_628 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component dac_table_8x_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component dac_table_8x_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    p_Val2_1_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_phi_mux_p_run_phi_fu_301_p4 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    p_Val2_1_fu_214 <= sample_group_V_fu_327_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    p_Val2_1_fu_214 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    p_run_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1))) then 
                    p_run_reg_298 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_condition_628)) then 
                    p_run_reg_298 <= p_run_2_reg_864;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                iqtmp_user_V_reg_874_pp0_iter1_reg <= iqtmp_user_V_reg_874;
                p_run_reg_298_pp0_iter1_reg <= p_run_reg_298;
                set_tlast_reg_852_pp0_iter1_reg <= set_tlast_reg_852;
                trunc_ln29_reg_844_pp0_iter1_reg <= trunc_ln29_reg_844;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                iqtmp_user_V_reg_874_pp0_iter2_reg <= iqtmp_user_V_reg_874_pp0_iter1_reg;
                iqtmp_user_V_reg_874_pp0_iter3_reg <= iqtmp_user_V_reg_874_pp0_iter2_reg;
                p_run_reg_298_pp0_iter2_reg <= p_run_reg_298_pp0_iter1_reg;
                p_run_reg_298_pp0_iter3_reg <= p_run_reg_298_pp0_iter2_reg;
                set_tlast_reg_852_pp0_iter2_reg <= set_tlast_reg_852_pp0_iter1_reg;
                set_tlast_reg_852_pp0_iter3_reg <= set_tlast_reg_852_pp0_iter2_reg;
                trunc_ln29_reg_844_pp0_iter2_reg <= trunc_ln29_reg_844_pp0_iter1_reg;
                trunc_ln29_reg_844_pp0_iter3_reg <= trunc_ln29_reg_844_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln29_reg_844_pp0_iter2_reg = ap_const_lv1_0) and (p_run_reg_298_pp0_iter2_reg = ap_const_lv1_1))) then
                i_V_reg_884 <= i_V_fu_391_p1;
                q_V_reg_889 <= comb2wide_V_q0(255 downto 128);
                tmp_10_reg_949 <= comb2wide_V_q0(223 downto 208);
                tmp_11_reg_954 <= comb2wide_V_q0(111 downto 96);
                tmp_12_reg_959 <= comb2wide_V_q0(239 downto 224);
                tmp_13_reg_964 <= comb2wide_V_q0(127 downto 112);
                tmp_14_reg_969 <= comb2wide_V_q0(255 downto 240);
                tmp_1_reg_924 <= comb2wide_V_q0(63 downto 48);
                tmp_2_reg_929 <= comb2wide_V_q0(191 downto 176);
                tmp_3_reg_944 <= comb2wide_V_q0(95 downto 80);
                tmp_4_reg_899 <= comb2wide_V_q0(143 downto 128);
                tmp_5_reg_934 <= comb2wide_V_q0(79 downto 64);
                tmp_6_reg_904 <= comb2wide_V_q0(31 downto 16);
                tmp_7_reg_909 <= comb2wide_V_q0(159 downto 144);
                tmp_8_reg_939 <= comb2wide_V_q0(207 downto 192);
                tmp_9_reg_914 <= comb2wide_V_q0(47 downto 32);
                tmp_s_reg_919 <= comb2wide_V_q0(175 downto 160);
                trunc_ln674_2_reg_894 <= trunc_ln674_2_fu_405_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_run_reg_298_pp0_iter2_reg = ap_const_lv1_1))) then
                iq_for2clocks_V_1_reg_879 <= comb2wide_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_p_run_phi_fu_301_p4 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                iqtmp_user_V_reg_874 <= iqtmp_user_V_fu_382_p1;
                set_tlast_reg_852 <= set_tlast_fu_341_p2;
                trunc_ln29_reg_844 <= trunc_ln29_fu_333_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                p_Val2_2_fu_218 <= p_Val2_s_fu_798_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_p_run_phi_fu_301_p4 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_run_2_reg_864 <= p_run_2_fu_368_p2;
                p_runcache_2_reg_309 <= p_runcache_fu_374_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter4, iout_TREADY, p_run_reg_298_pp0_iter3_reg, qout_TREADY, iqout_TREADY)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((iqout_TREADY = ap_const_logic_0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1)) or ((qout_TREADY = ap_const_logic_0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1)) or ((p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (iout_TREADY = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter4, iout_TREADY, p_run_reg_298_pp0_iter3_reg, qout_TREADY, iqout_TREADY, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or ((iqout_TREADY = ap_const_logic_0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1)) or ((qout_TREADY = ap_const_logic_0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1)) or ((p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (iout_TREADY = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter4, iout_TREADY, p_run_reg_298_pp0_iter3_reg, qout_TREADY, iqout_TREADY, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or ((iqout_TREADY = ap_const_logic_0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1)) or ((qout_TREADY = ap_const_logic_0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1)) or ((p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (iout_TREADY = ap_const_logic_0))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(iout_TREADY, p_run_reg_298_pp0_iter3_reg, qout_TREADY, iqout_TREADY)
    begin
                ap_block_state5_io <= (((iqout_TREADY = ap_const_logic_0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1)) or ((qout_TREADY = ap_const_logic_0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1)) or ((p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (iout_TREADY = ap_const_logic_0)));
    end process;


    ap_block_state5_pp0_stage0_iter4_assign_proc : process(iout_TREADY, p_run_reg_298_pp0_iter3_reg, qout_TREADY, iqout_TREADY)
    begin
                ap_block_state5_pp0_stage0_iter4 <= (((iqout_TREADY = ap_const_logic_0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1)) or ((qout_TREADY = ap_const_logic_0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1)) or ((p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (iout_TREADY = ap_const_logic_0)));
    end process;


    ap_condition_623_assign_proc : process(ap_enable_reg_pp0_iter1, p_run_reg_298, ap_block_pp0_stage0)
    begin
                ap_condition_623 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (p_run_reg_298 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_628_assign_proc : process(ap_enable_reg_pp0_iter1, p_run_reg_298, ap_block_pp0_stage0_11001)
    begin
                ap_condition_628 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_run_reg_298 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_phi_mux_p_run_phi_fu_301_p4)
    begin
        if (((ap_phi_mux_p_run_phi_fu_301_p4 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_p_run_phi_fu_301_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, p_run_2_reg_864, ap_loop_init, ap_condition_623)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_p_run_phi_fu_301_p4 <= ap_const_lv1_1;
            elsif ((ap_const_boolean_1 = ap_condition_623)) then 
                ap_phi_mux_p_run_phi_fu_301_p4 <= p_run_2_reg_864;
            else 
                ap_phi_mux_p_run_phi_fu_301_p4 <= ap_const_lv1_1;
            end if;
        else 
            ap_phi_mux_p_run_phi_fu_301_p4 <= ap_const_lv1_1;
        end if; 
    end process;


    ap_phi_mux_p_runcache_2_phi_fu_312_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, p_runcache_2_reg_309, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_runcache_2_phi_fu_312_p4 <= ap_const_lv1_1;
        else 
            ap_phi_mux_p_runcache_2_phi_fu_312_p4 <= p_runcache_2_reg_309;
        end if; 
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_sample_group_V_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, p_Val2_1_fu_214)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_sample_group_V_1 <= ap_const_lv16_0;
        else 
            ap_sig_allocacmp_sample_group_V_1 <= p_Val2_1_fu_214;
        end if; 
    end process;

    comb2wide_V_address0 <= zext_ln587_fu_363_p1(15 - 1 downto 0);

    comb2wide_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            comb2wide_V_ce0 <= ap_const_logic_1;
        else 
            comb2wide_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    i_V_1_fu_582_p4 <= p_Val2_2_fu_218(383 downto 256);
    i_V_fu_391_p1 <= comb2wide_V_q0(128 - 1 downto 0);
    iout_TDATA <= 
        i_V_1_fu_582_p4 when (trunc_ln29_reg_844_pp0_iter3_reg(0) = '1') else 
        i_V_reg_884;

    iout_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, iout_TREADY, p_run_reg_298_pp0_iter3_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            iout_TDATA_blk_n <= iout_TREADY;
        else 
            iout_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iout_TKEEP <= ap_const_lv16_0;
    iout_TLAST <= set_tlast_reg_852_pp0_iter3_reg;
    iout_TSTRB <= ap_const_lv16_0;

    iout_TVALID_assign_proc : process(ap_enable_reg_pp0_iter4, p_run_reg_298_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            iout_TVALID <= ap_const_logic_1;
        else 
            iout_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    iqout_TDATA <= 
        p_Result_4_fu_762_p17 when (trunc_ln29_reg_844_pp0_iter3_reg(0) = '1') else 
        p_Result_3_fu_562_p17;

    iqout_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, p_run_reg_298_pp0_iter3_reg, iqout_TREADY, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            iqout_TDATA_blk_n <= iqout_TREADY;
        else 
            iqout_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iqout_TKEEP <= ap_const_lv32_0;
    iqout_TLAST <= set_tlast_reg_852_pp0_iter3_reg;
    iqout_TSTRB <= ap_const_lv32_0;
    iqout_TUSER <= iqtmp_user_V_reg_874_pp0_iter3_reg;

    iqout_TVALID_assign_proc : process(ap_enable_reg_pp0_iter4, p_run_reg_298_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            iqout_TVALID <= ap_const_logic_1;
        else 
            iqout_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    iqtmp_user_V_fu_382_p1 <= ap_sig_allocacmp_sample_group_V_1(8 - 1 downto 0);
    p_Result_3_fu_562_p17 <= (((((((((((((((tmp_14_reg_969 & tmp_13_reg_964) & tmp_12_reg_959) & tmp_11_reg_954) & tmp_10_reg_949) & tmp_3_reg_944) & tmp_8_reg_939) & tmp_5_reg_934) & tmp_2_reg_929) & tmp_1_reg_924) & tmp_s_reg_919) & tmp_9_reg_914) & tmp_7_reg_909) & tmp_6_reg_904) & tmp_4_reg_899) & trunc_ln674_2_reg_894);
    p_Result_4_fu_762_p17 <= (((((((((((((((tmp_30_fu_752_p4 & tmp_29_fu_742_p4) & tmp_28_fu_732_p4) & tmp_27_fu_722_p4) & tmp_26_fu_712_p4) & tmp_25_fu_702_p4) & tmp_24_fu_692_p4) & tmp_23_fu_682_p4) & tmp_22_fu_672_p4) & tmp_21_fu_662_p4) & tmp_20_fu_652_p4) & tmp_19_fu_642_p4) & tmp_18_fu_632_p4) & tmp_17_fu_622_p4) & tmp_16_fu_612_p4) & tmp_15_fu_602_p4);
    p_Result_s_fu_347_p2 <= (trunc_ln29_fu_333_p1 xor ap_const_lv1_1);
    p_Val2_s_fu_798_p3 <= 
        p_Val2_2_fu_218 when (trunc_ln29_reg_844_pp0_iter3_reg(0) = '1') else 
        iq_for2clocks_V_1_reg_879;
    p_run_2_fu_368_p2 <= (p_Result_s_fu_347_p2 or ap_phi_mux_p_runcache_2_phi_fu_312_p4);
    p_runcache_fu_374_p2 <= (0=>run, others=>'-');
    p_runcache_fu_374_p3 <= 
        ap_phi_mux_p_runcache_2_phi_fu_312_p4 when (trunc_ln29_fu_333_p1(0) = '1') else 
        p_runcache_fu_374_p2;
    q_V_1_fu_592_p4 <= p_Val2_2_fu_218(511 downto 384);
    qout_TDATA <= 
        q_V_1_fu_592_p4 when (trunc_ln29_reg_844_pp0_iter3_reg(0) = '1') else 
        q_V_reg_889;

    qout_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, p_run_reg_298_pp0_iter3_reg, qout_TREADY, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            qout_TDATA_blk_n <= qout_TREADY;
        else 
            qout_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    qout_TKEEP <= ap_const_lv16_0;
    qout_TLAST <= set_tlast_reg_852_pp0_iter3_reg;
    qout_TSTRB <= ap_const_lv16_0;

    qout_TVALID_assign_proc : process(ap_enable_reg_pp0_iter4, p_run_reg_298_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_run_reg_298_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            qout_TVALID <= ap_const_logic_1;
        else 
            qout_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_353_p4 <= ap_sig_allocacmp_sample_group_V_1(15 downto 1);
    sample_group_V_fu_327_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sample_group_V_1) + unsigned(ap_const_lv16_1));
    set_tlast_fu_341_p2 <= "1" when (trunc_ln674_fu_337_p1 = ap_const_lv8_FF) else "0";
    tmp_15_fu_602_p4 <= p_Val2_2_fu_218(271 downto 256);
    tmp_16_fu_612_p4 <= p_Val2_2_fu_218(399 downto 384);
    tmp_17_fu_622_p4 <= p_Val2_2_fu_218(287 downto 272);
    tmp_18_fu_632_p4 <= p_Val2_2_fu_218(415 downto 400);
    tmp_19_fu_642_p4 <= p_Val2_2_fu_218(303 downto 288);
    tmp_20_fu_652_p4 <= p_Val2_2_fu_218(431 downto 416);
    tmp_21_fu_662_p4 <= p_Val2_2_fu_218(319 downto 304);
    tmp_22_fu_672_p4 <= p_Val2_2_fu_218(447 downto 432);
    tmp_23_fu_682_p4 <= p_Val2_2_fu_218(335 downto 320);
    tmp_24_fu_692_p4 <= p_Val2_2_fu_218(463 downto 448);
    tmp_25_fu_702_p4 <= p_Val2_2_fu_218(351 downto 336);
    tmp_26_fu_712_p4 <= p_Val2_2_fu_218(479 downto 464);
    tmp_27_fu_722_p4 <= p_Val2_2_fu_218(367 downto 352);
    tmp_28_fu_732_p4 <= p_Val2_2_fu_218(495 downto 480);
    tmp_29_fu_742_p4 <= p_Val2_2_fu_218(383 downto 368);
    tmp_30_fu_752_p4 <= p_Val2_2_fu_218(511 downto 496);
    trunc_ln29_fu_333_p1 <= ap_sig_allocacmp_sample_group_V_1(1 - 1 downto 0);
    trunc_ln674_2_fu_405_p1 <= comb2wide_V_q0(16 - 1 downto 0);
    trunc_ln674_fu_337_p1 <= ap_sig_allocacmp_sample_group_V_1(8 - 1 downto 0);
    zext_ln587_fu_363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_353_p4),64));
end behav;
