-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dac_table_axim_dac_table_axim_Pipeline_runloop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    last_counter_V_4 : IN STD_LOGIC_VECTOR (14 downto 0);
    comb_0_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_0_ce0 : OUT STD_LOGIC;
    comb_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_1_ce0 : OUT STD_LOGIC;
    comb_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_2_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_2_ce0 : OUT STD_LOGIC;
    comb_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_3_ce0 : OUT STD_LOGIC;
    comb_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_4_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_4_ce0 : OUT STD_LOGIC;
    comb_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_5_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_5_ce0 : OUT STD_LOGIC;
    comb_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_6_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_6_ce0 : OUT STD_LOGIC;
    comb_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_7_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_7_ce0 : OUT STD_LOGIC;
    comb_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_8_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_8_ce0 : OUT STD_LOGIC;
    comb_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_9_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_9_ce0 : OUT STD_LOGIC;
    comb_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_10_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_10_ce0 : OUT STD_LOGIC;
    comb_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_11_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_11_ce0 : OUT STD_LOGIC;
    comb_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_12_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_12_ce0 : OUT STD_LOGIC;
    comb_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_13_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_13_ce0 : OUT STD_LOGIC;
    comb_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_14_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_14_ce0 : OUT STD_LOGIC;
    comb_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    comb_15_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    comb_15_ce0 : OUT STD_LOGIC;
    comb_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tlast : IN STD_LOGIC_VECTOR (0 downto 0);
    iout_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    iout_TVALID : OUT STD_LOGIC;
    iout_TREADY : IN STD_LOGIC;
    iout_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
    iout_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    iout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    qout_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    qout_TVALID : OUT STD_LOGIC;
    qout_TREADY : IN STD_LOGIC;
    qout_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
    qout_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    qout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iqout_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    iqout_TVALID : OUT STD_LOGIC;
    iqout_TREADY : IN STD_LOGIC;
    iqout_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0);
    iqout_TSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    iqout_TUSER : OUT STD_LOGIC_VECTOR (7 downto 0);
    iqout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    bar_V : IN STD_LOGIC_VECTOR (14 downto 0) );
end;


architecture behav of dac_table_axim_dac_table_axim_Pipeline_runloop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv15_7FFF : STD_LOGIC_VECTOR (14 downto 0) := "111111111111111";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal iout_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal qout_TDATA_blk_n : STD_LOGIC;
    signal iqout_TDATA_blk_n : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal set_last_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal set_last_reg_942 : STD_LOGIC_VECTOR (0 downto 0);
    signal iqtmp_user_V_fu_465_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal iqtmp_user_V_reg_949 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal conv_i62_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sample_V_fu_114 : STD_LOGIC_VECTOR (14 downto 0);
    signal sample_V_5_fu_480_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal last_counter_V_fu_118 : STD_LOGIC_VECTOR (14 downto 0);
    signal last_counter_V_6_fu_453_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln1049_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_counter_V_5_fu_441_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln1049_1_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sample_V_4_fu_474_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln254_31_fu_708_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_29_fu_694_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_27_fu_680_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_25_fu_666_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_23_fu_652_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_21_fu_638_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_19_fu_624_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_17_fu_610_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_15_fu_596_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_13_fu_582_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_11_fu_568_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_8_fu_554_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_6_fu_540_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_4_fu_526_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_2_fu_512_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_fu_498_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_28_fu_749_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_26_fu_698_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_24_fu_684_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_22_fu_670_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_20_fu_656_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_18_fu_642_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_16_fu_628_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_14_fu_614_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_12_fu_600_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_10_fu_586_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_s_fu_572_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_9_fu_558_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_7_fu_544_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_5_fu_530_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_3_fu_516_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln254_1_fu_502_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    last_counter_V_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                last_counter_V_fu_118 <= last_counter_V_4;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                last_counter_V_fu_118 <= last_counter_V_6_fu_453_p3;
            end if; 
        end if;
    end process;

    sample_V_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                sample_V_fu_114 <= ap_const_lv15_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                sample_V_fu_114 <= sample_V_5_fu_480_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                iqtmp_user_V_reg_949 <= iqtmp_user_V_fu_465_p1;
                set_last_reg_942 <= set_last_fu_460_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(iout_TREADY, qout_TREADY, iqout_TREADY, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((iqout_TREADY = ap_const_logic_0) or (qout_TREADY = ap_const_logic_0) or (iout_TREADY = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(iout_TREADY, qout_TREADY, iqout_TREADY, ap_enable_reg_pp0_iter1, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((iqout_TREADY = ap_const_logic_0) or (qout_TREADY = ap_const_logic_0) or (iout_TREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(iout_TREADY, qout_TREADY, iqout_TREADY, ap_enable_reg_pp0_iter1, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((iqout_TREADY = ap_const_logic_0) or (qout_TREADY = ap_const_logic_0) or (iout_TREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io)));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(iout_TREADY, qout_TREADY, iqout_TREADY)
    begin
                ap_block_state3_io <= ((iqout_TREADY = ap_const_logic_0) or (qout_TREADY = ap_const_logic_0) or (iout_TREADY = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(iout_TREADY, qout_TREADY, iqout_TREADY)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((iqout_TREADY = ap_const_logic_0) or (qout_TREADY = ap_const_logic_0) or (iout_TREADY = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_const_logic_0;
    comb_0_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_0_ce0 <= ap_const_logic_1;
        else 
            comb_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_10_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_10_ce0 <= ap_const_logic_1;
        else 
            comb_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_11_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_11_ce0 <= ap_const_logic_1;
        else 
            comb_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_12_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_12_ce0 <= ap_const_logic_1;
        else 
            comb_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_13_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_13_ce0 <= ap_const_logic_1;
        else 
            comb_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_14_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_14_ce0 <= ap_const_logic_1;
        else 
            comb_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_15_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_15_ce0 <= ap_const_logic_1;
        else 
            comb_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_1_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_1_ce0 <= ap_const_logic_1;
        else 
            comb_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_2_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_2_ce0 <= ap_const_logic_1;
        else 
            comb_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_3_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_3_ce0 <= ap_const_logic_1;
        else 
            comb_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_4_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_4_ce0 <= ap_const_logic_1;
        else 
            comb_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_5_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_5_ce0 <= ap_const_logic_1;
        else 
            comb_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_6_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_6_ce0 <= ap_const_logic_1;
        else 
            comb_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_7_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_7_ce0 <= ap_const_logic_1;
        else 
            comb_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_8_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_8_ce0 <= ap_const_logic_1;
        else 
            comb_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    comb_9_address0 <= conv_i62_fu_421_p1(14 - 1 downto 0);

    comb_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            comb_9_ce0 <= ap_const_logic_1;
        else 
            comb_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_i62_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sample_V_fu_114),64));
    icmp_ln1049_1_fu_469_p2 <= "1" when (sample_V_fu_114 = bar_V) else "0";
    icmp_ln1049_fu_447_p2 <= "1" when (last_counter_V_fu_118 = ap_const_lv15_0) else "0";
    iout_TDATA <= (((((((((((((((trunc_ln254_31_fu_708_p1 & trunc_ln254_29_fu_694_p1) & trunc_ln254_27_fu_680_p1) & trunc_ln254_25_fu_666_p1) & trunc_ln254_23_fu_652_p1) & trunc_ln254_21_fu_638_p1) & trunc_ln254_19_fu_624_p1) & trunc_ln254_17_fu_610_p1) & trunc_ln254_15_fu_596_p1) & trunc_ln254_13_fu_582_p1) & trunc_ln254_11_fu_568_p1) & trunc_ln254_8_fu_554_p1) & trunc_ln254_6_fu_540_p1) & trunc_ln254_4_fu_526_p1) & trunc_ln254_2_fu_512_p1) & trunc_ln254_fu_498_p1);

    iout_TDATA_blk_n_assign_proc : process(iout_TREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            iout_TDATA_blk_n <= iout_TREADY;
        else 
            iout_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iout_TKEEP <= ap_const_lv32_0;
    iout_TLAST <= set_last_reg_942;
    iout_TSTRB <= ap_const_lv32_0;

    iout_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            iout_TVALID <= ap_const_logic_1;
        else 
            iout_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    iqout_TDATA <= (((((((((((((((comb_15_q0 & comb_14_q0) & comb_13_q0) & comb_12_q0) & comb_11_q0) & comb_10_q0) & comb_9_q0) & comb_8_q0) & comb_7_q0) & comb_6_q0) & comb_5_q0) & comb_4_q0) & comb_3_q0) & comb_2_q0) & comb_1_q0) & comb_0_q0);

    iqout_TDATA_blk_n_assign_proc : process(iqout_TREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            iqout_TDATA_blk_n <= iqout_TREADY;
        else 
            iqout_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iqout_TKEEP <= ap_const_lv64_0;
    iqout_TLAST <= set_last_reg_942;
    iqout_TSTRB <= ap_const_lv64_0;
    iqout_TUSER <= iqtmp_user_V_reg_949;

    iqout_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            iqout_TVALID <= ap_const_logic_1;
        else 
            iqout_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    iqtmp_user_V_fu_465_p1 <= sample_V_fu_114(8 - 1 downto 0);
    last_counter_V_5_fu_441_p2 <= std_logic_vector(unsigned(last_counter_V_fu_118) + unsigned(ap_const_lv15_7FFF));
    last_counter_V_6_fu_453_p3 <= 
        last_counter_V_4 when (icmp_ln1049_fu_447_p2(0) = '1') else 
        last_counter_V_5_fu_441_p2;
    qout_TDATA <= (((((((((((((((trunc_ln254_28_fu_749_p4 & trunc_ln254_26_fu_698_p4) & trunc_ln254_24_fu_684_p4) & trunc_ln254_22_fu_670_p4) & trunc_ln254_20_fu_656_p4) & trunc_ln254_18_fu_642_p4) & trunc_ln254_16_fu_628_p4) & trunc_ln254_14_fu_614_p4) & trunc_ln254_12_fu_600_p4) & trunc_ln254_10_fu_586_p4) & trunc_ln254_s_fu_572_p4) & trunc_ln254_9_fu_558_p4) & trunc_ln254_7_fu_544_p4) & trunc_ln254_5_fu_530_p4) & trunc_ln254_3_fu_516_p4) & trunc_ln254_1_fu_502_p4);

    qout_TDATA_blk_n_assign_proc : process(qout_TREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            qout_TDATA_blk_n <= qout_TREADY;
        else 
            qout_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    qout_TKEEP <= ap_const_lv32_0;
    qout_TLAST <= set_last_reg_942;
    qout_TSTRB <= ap_const_lv32_0;

    qout_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            qout_TVALID <= ap_const_logic_1;
        else 
            qout_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    sample_V_4_fu_474_p2 <= std_logic_vector(unsigned(sample_V_fu_114) + unsigned(ap_const_lv15_1));
    sample_V_5_fu_480_p3 <= 
        ap_const_lv15_0 when (icmp_ln1049_1_fu_469_p2(0) = '1') else 
        sample_V_4_fu_474_p2;
    set_last_fu_460_p2 <= (tlast and icmp_ln1049_fu_447_p2);
    trunc_ln254_10_fu_586_p4 <= comb_6_q0(31 downto 16);
    trunc_ln254_11_fu_568_p1 <= comb_5_q0(16 - 1 downto 0);
    trunc_ln254_12_fu_600_p4 <= comb_7_q0(31 downto 16);
    trunc_ln254_13_fu_582_p1 <= comb_6_q0(16 - 1 downto 0);
    trunc_ln254_14_fu_614_p4 <= comb_8_q0(31 downto 16);
    trunc_ln254_15_fu_596_p1 <= comb_7_q0(16 - 1 downto 0);
    trunc_ln254_16_fu_628_p4 <= comb_9_q0(31 downto 16);
    trunc_ln254_17_fu_610_p1 <= comb_8_q0(16 - 1 downto 0);
    trunc_ln254_18_fu_642_p4 <= comb_10_q0(31 downto 16);
    trunc_ln254_19_fu_624_p1 <= comb_9_q0(16 - 1 downto 0);
    trunc_ln254_1_fu_502_p4 <= comb_0_q0(31 downto 16);
    trunc_ln254_20_fu_656_p4 <= comb_11_q0(31 downto 16);
    trunc_ln254_21_fu_638_p1 <= comb_10_q0(16 - 1 downto 0);
    trunc_ln254_22_fu_670_p4 <= comb_12_q0(31 downto 16);
    trunc_ln254_23_fu_652_p1 <= comb_11_q0(16 - 1 downto 0);
    trunc_ln254_24_fu_684_p4 <= comb_13_q0(31 downto 16);
    trunc_ln254_25_fu_666_p1 <= comb_12_q0(16 - 1 downto 0);
    trunc_ln254_26_fu_698_p4 <= comb_14_q0(31 downto 16);
    trunc_ln254_27_fu_680_p1 <= comb_13_q0(16 - 1 downto 0);
    trunc_ln254_28_fu_749_p4 <= comb_15_q0(31 downto 16);
    trunc_ln254_29_fu_694_p1 <= comb_14_q0(16 - 1 downto 0);
    trunc_ln254_2_fu_512_p1 <= comb_1_q0(16 - 1 downto 0);
    trunc_ln254_31_fu_708_p1 <= comb_15_q0(16 - 1 downto 0);
    trunc_ln254_3_fu_516_p4 <= comb_1_q0(31 downto 16);
    trunc_ln254_4_fu_526_p1 <= comb_2_q0(16 - 1 downto 0);
    trunc_ln254_5_fu_530_p4 <= comb_2_q0(31 downto 16);
    trunc_ln254_6_fu_540_p1 <= comb_3_q0(16 - 1 downto 0);
    trunc_ln254_7_fu_544_p4 <= comb_3_q0(31 downto 16);
    trunc_ln254_8_fu_554_p1 <= comb_4_q0(16 - 1 downto 0);
    trunc_ln254_9_fu_558_p4 <= comb_4_q0(31 downto 16);
    trunc_ln254_fu_498_p1 <= comb_0_q0(16 - 1 downto 0);
    trunc_ln254_s_fu_572_p4 <= comb_5_q0(31 downto 16);
end behav;
