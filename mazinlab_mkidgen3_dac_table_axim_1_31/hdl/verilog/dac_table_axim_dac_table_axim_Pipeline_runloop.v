// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dac_table_axim_dac_table_axim_Pipeline_runloop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        last_counter_V_4,
        comb_0_address0,
        comb_0_ce0,
        comb_0_q0,
        comb_1_address0,
        comb_1_ce0,
        comb_1_q0,
        comb_2_address0,
        comb_2_ce0,
        comb_2_q0,
        comb_3_address0,
        comb_3_ce0,
        comb_3_q0,
        comb_4_address0,
        comb_4_ce0,
        comb_4_q0,
        comb_5_address0,
        comb_5_ce0,
        comb_5_q0,
        comb_6_address0,
        comb_6_ce0,
        comb_6_q0,
        comb_7_address0,
        comb_7_ce0,
        comb_7_q0,
        comb_8_address0,
        comb_8_ce0,
        comb_8_q0,
        comb_9_address0,
        comb_9_ce0,
        comb_9_q0,
        comb_10_address0,
        comb_10_ce0,
        comb_10_q0,
        comb_11_address0,
        comb_11_ce0,
        comb_11_q0,
        comb_12_address0,
        comb_12_ce0,
        comb_12_q0,
        comb_13_address0,
        comb_13_ce0,
        comb_13_q0,
        comb_14_address0,
        comb_14_ce0,
        comb_14_q0,
        comb_15_address0,
        comb_15_ce0,
        comb_15_q0,
        tlast,
        iout_TDATA,
        iout_TVALID,
        iout_TREADY,
        iout_TKEEP,
        iout_TSTRB,
        iout_TLAST,
        qout_TDATA,
        qout_TVALID,
        qout_TREADY,
        qout_TKEEP,
        qout_TSTRB,
        qout_TLAST,
        iqout_TDATA,
        iqout_TVALID,
        iqout_TREADY,
        iqout_TKEEP,
        iqout_TSTRB,
        iqout_TUSER,
        iqout_TLAST,
        bar_V
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [14:0] last_counter_V_4;
output  [13:0] comb_0_address0;
output   comb_0_ce0;
input  [31:0] comb_0_q0;
output  [13:0] comb_1_address0;
output   comb_1_ce0;
input  [31:0] comb_1_q0;
output  [13:0] comb_2_address0;
output   comb_2_ce0;
input  [31:0] comb_2_q0;
output  [13:0] comb_3_address0;
output   comb_3_ce0;
input  [31:0] comb_3_q0;
output  [13:0] comb_4_address0;
output   comb_4_ce0;
input  [31:0] comb_4_q0;
output  [13:0] comb_5_address0;
output   comb_5_ce0;
input  [31:0] comb_5_q0;
output  [13:0] comb_6_address0;
output   comb_6_ce0;
input  [31:0] comb_6_q0;
output  [13:0] comb_7_address0;
output   comb_7_ce0;
input  [31:0] comb_7_q0;
output  [13:0] comb_8_address0;
output   comb_8_ce0;
input  [31:0] comb_8_q0;
output  [13:0] comb_9_address0;
output   comb_9_ce0;
input  [31:0] comb_9_q0;
output  [13:0] comb_10_address0;
output   comb_10_ce0;
input  [31:0] comb_10_q0;
output  [13:0] comb_11_address0;
output   comb_11_ce0;
input  [31:0] comb_11_q0;
output  [13:0] comb_12_address0;
output   comb_12_ce0;
input  [31:0] comb_12_q0;
output  [13:0] comb_13_address0;
output   comb_13_ce0;
input  [31:0] comb_13_q0;
output  [13:0] comb_14_address0;
output   comb_14_ce0;
input  [31:0] comb_14_q0;
output  [13:0] comb_15_address0;
output   comb_15_ce0;
input  [31:0] comb_15_q0;
input  [0:0] tlast;
output  [255:0] iout_TDATA;
output   iout_TVALID;
input   iout_TREADY;
output  [31:0] iout_TKEEP;
output  [31:0] iout_TSTRB;
output  [0:0] iout_TLAST;
output  [255:0] qout_TDATA;
output   qout_TVALID;
input   qout_TREADY;
output  [31:0] qout_TKEEP;
output  [31:0] qout_TSTRB;
output  [0:0] qout_TLAST;
output  [511:0] iqout_TDATA;
output   iqout_TVALID;
input   iqout_TREADY;
output  [63:0] iqout_TKEEP;
output  [63:0] iqout_TSTRB;
output  [7:0] iqout_TUSER;
output  [0:0] iqout_TLAST;
input  [14:0] bar_V;

reg ap_done;
reg ap_idle;
reg comb_0_ce0;
reg comb_1_ce0;
reg comb_2_ce0;
reg comb_3_ce0;
reg comb_4_ce0;
reg comb_5_ce0;
reg comb_6_ce0;
reg comb_7_ce0;
reg comb_8_ce0;
reg comb_9_ce0;
reg comb_10_ce0;
reg comb_11_ce0;
reg comb_12_ce0;
reg comb_13_ce0;
reg comb_14_ce0;
reg comb_15_ce0;
reg iout_TVALID;
reg qout_TVALID;
reg iqout_TVALID;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    iout_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    qout_TDATA_blk_n;
reg    iqout_TDATA_blk_n;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] set_last_fu_460_p2;
reg   [0:0] set_last_reg_942;
wire   [7:0] iqtmp_user_V_fu_465_p1;
reg   [7:0] iqtmp_user_V_reg_949;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] conv_i62_fu_421_p1;
reg   [14:0] sample_V_fu_114;
wire   [14:0] sample_V_5_fu_480_p3;
reg   [14:0] last_counter_V_fu_118;
wire   [14:0] last_counter_V_6_fu_453_p3;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln1049_fu_447_p2;
wire   [14:0] last_counter_V_5_fu_441_p2;
wire   [0:0] icmp_ln1049_1_fu_469_p2;
wire   [14:0] sample_V_4_fu_474_p2;
wire   [15:0] trunc_ln254_31_fu_708_p1;
wire   [15:0] trunc_ln254_29_fu_694_p1;
wire   [15:0] trunc_ln254_27_fu_680_p1;
wire   [15:0] trunc_ln254_25_fu_666_p1;
wire   [15:0] trunc_ln254_23_fu_652_p1;
wire   [15:0] trunc_ln254_21_fu_638_p1;
wire   [15:0] trunc_ln254_19_fu_624_p1;
wire   [15:0] trunc_ln254_17_fu_610_p1;
wire   [15:0] trunc_ln254_15_fu_596_p1;
wire   [15:0] trunc_ln254_13_fu_582_p1;
wire   [15:0] trunc_ln254_11_fu_568_p1;
wire   [15:0] trunc_ln254_8_fu_554_p1;
wire   [15:0] trunc_ln254_6_fu_540_p1;
wire   [15:0] trunc_ln254_4_fu_526_p1;
wire   [15:0] trunc_ln254_2_fu_512_p1;
wire   [15:0] trunc_ln254_fu_498_p1;
wire   [15:0] trunc_ln254_28_fu_749_p4;
wire   [15:0] trunc_ln254_26_fu_698_p4;
wire   [15:0] trunc_ln254_24_fu_684_p4;
wire   [15:0] trunc_ln254_22_fu_670_p4;
wire   [15:0] trunc_ln254_20_fu_656_p4;
wire   [15:0] trunc_ln254_18_fu_642_p4;
wire   [15:0] trunc_ln254_16_fu_628_p4;
wire   [15:0] trunc_ln254_14_fu_614_p4;
wire   [15:0] trunc_ln254_12_fu_600_p4;
wire   [15:0] trunc_ln254_10_fu_586_p4;
wire   [15:0] trunc_ln254_s_fu_572_p4;
wire   [15:0] trunc_ln254_9_fu_558_p4;
wire   [15:0] trunc_ln254_7_fu_544_p4;
wire   [15:0] trunc_ln254_5_fu_530_p4;
wire   [15:0] trunc_ln254_3_fu_516_p4;
wire   [15:0] trunc_ln254_1_fu_502_p4;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        last_counter_V_fu_118 <= last_counter_V_4;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        last_counter_V_fu_118 <= last_counter_V_6_fu_453_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sample_V_fu_114 <= 15'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sample_V_fu_114 <= sample_V_5_fu_480_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqtmp_user_V_reg_949 <= iqtmp_user_V_fu_465_p1;
        set_last_reg_942 <= set_last_fu_460_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_0_ce0 = 1'b1;
    end else begin
        comb_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_10_ce0 = 1'b1;
    end else begin
        comb_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_11_ce0 = 1'b1;
    end else begin
        comb_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_12_ce0 = 1'b1;
    end else begin
        comb_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_13_ce0 = 1'b1;
    end else begin
        comb_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_14_ce0 = 1'b1;
    end else begin
        comb_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_15_ce0 = 1'b1;
    end else begin
        comb_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_1_ce0 = 1'b1;
    end else begin
        comb_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_2_ce0 = 1'b1;
    end else begin
        comb_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_3_ce0 = 1'b1;
    end else begin
        comb_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_4_ce0 = 1'b1;
    end else begin
        comb_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_5_ce0 = 1'b1;
    end else begin
        comb_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_6_ce0 = 1'b1;
    end else begin
        comb_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_7_ce0 = 1'b1;
    end else begin
        comb_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_8_ce0 = 1'b1;
    end else begin
        comb_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        comb_9_ce0 = 1'b1;
    end else begin
        comb_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        iout_TDATA_blk_n = iout_TREADY;
    end else begin
        iout_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        iout_TVALID = 1'b1;
    end else begin
        iout_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        iqout_TDATA_blk_n = iqout_TREADY;
    end else begin
        iqout_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        iqout_TVALID = 1'b1;
    end else begin
        iqout_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        qout_TDATA_blk_n = qout_TREADY;
    end else begin
        qout_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        qout_TVALID = 1'b1;
    end else begin
        qout_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((iqout_TREADY == 1'b0) | (qout_TREADY == 1'b0) | (iout_TREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((iqout_TREADY == 1'b0) | (qout_TREADY == 1'b0) | (iout_TREADY == 1'b0) | (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((iqout_TREADY == 1'b0) | (qout_TREADY == 1'b0) | (iout_TREADY == 1'b0) | (1'b1 == ap_block_state3_io)));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((iqout_TREADY == 1'b0) | (qout_TREADY == 1'b0) | (iout_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((iqout_TREADY == 1'b0) | (qout_TREADY == 1'b0) | (iout_TREADY == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = 1'b0;

assign comb_0_address0 = conv_i62_fu_421_p1;

assign comb_10_address0 = conv_i62_fu_421_p1;

assign comb_11_address0 = conv_i62_fu_421_p1;

assign comb_12_address0 = conv_i62_fu_421_p1;

assign comb_13_address0 = conv_i62_fu_421_p1;

assign comb_14_address0 = conv_i62_fu_421_p1;

assign comb_15_address0 = conv_i62_fu_421_p1;

assign comb_1_address0 = conv_i62_fu_421_p1;

assign comb_2_address0 = conv_i62_fu_421_p1;

assign comb_3_address0 = conv_i62_fu_421_p1;

assign comb_4_address0 = conv_i62_fu_421_p1;

assign comb_5_address0 = conv_i62_fu_421_p1;

assign comb_6_address0 = conv_i62_fu_421_p1;

assign comb_7_address0 = conv_i62_fu_421_p1;

assign comb_8_address0 = conv_i62_fu_421_p1;

assign comb_9_address0 = conv_i62_fu_421_p1;

assign conv_i62_fu_421_p1 = sample_V_fu_114;

assign icmp_ln1049_1_fu_469_p2 = ((sample_V_fu_114 == bar_V) ? 1'b1 : 1'b0);

assign icmp_ln1049_fu_447_p2 = ((last_counter_V_fu_118 == 15'd0) ? 1'b1 : 1'b0);

assign iout_TDATA = {{{{{{{{{{{{{{{{trunc_ln254_31_fu_708_p1}, {trunc_ln254_29_fu_694_p1}}, {trunc_ln254_27_fu_680_p1}}, {trunc_ln254_25_fu_666_p1}}, {trunc_ln254_23_fu_652_p1}}, {trunc_ln254_21_fu_638_p1}}, {trunc_ln254_19_fu_624_p1}}, {trunc_ln254_17_fu_610_p1}}, {trunc_ln254_15_fu_596_p1}}, {trunc_ln254_13_fu_582_p1}}, {trunc_ln254_11_fu_568_p1}}, {trunc_ln254_8_fu_554_p1}}, {trunc_ln254_6_fu_540_p1}}, {trunc_ln254_4_fu_526_p1}}, {trunc_ln254_2_fu_512_p1}}, {trunc_ln254_fu_498_p1}};

assign iout_TKEEP = 32'd0;

assign iout_TLAST = set_last_reg_942;

assign iout_TSTRB = 32'd0;

assign iqout_TDATA = {{{{{{{{{{{{{{{{comb_15_q0}, {comb_14_q0}}, {comb_13_q0}}, {comb_12_q0}}, {comb_11_q0}}, {comb_10_q0}}, {comb_9_q0}}, {comb_8_q0}}, {comb_7_q0}}, {comb_6_q0}}, {comb_5_q0}}, {comb_4_q0}}, {comb_3_q0}}, {comb_2_q0}}, {comb_1_q0}}, {comb_0_q0}};

assign iqout_TKEEP = 64'd0;

assign iqout_TLAST = set_last_reg_942;

assign iqout_TSTRB = 64'd0;

assign iqout_TUSER = iqtmp_user_V_reg_949;

assign iqtmp_user_V_fu_465_p1 = sample_V_fu_114[7:0];

assign last_counter_V_5_fu_441_p2 = ($signed(last_counter_V_fu_118) + $signed(15'd32767));

assign last_counter_V_6_fu_453_p3 = ((icmp_ln1049_fu_447_p2[0:0] == 1'b1) ? last_counter_V_4 : last_counter_V_5_fu_441_p2);

assign qout_TDATA = {{{{{{{{{{{{{{{{trunc_ln254_28_fu_749_p4}, {trunc_ln254_26_fu_698_p4}}, {trunc_ln254_24_fu_684_p4}}, {trunc_ln254_22_fu_670_p4}}, {trunc_ln254_20_fu_656_p4}}, {trunc_ln254_18_fu_642_p4}}, {trunc_ln254_16_fu_628_p4}}, {trunc_ln254_14_fu_614_p4}}, {trunc_ln254_12_fu_600_p4}}, {trunc_ln254_10_fu_586_p4}}, {trunc_ln254_s_fu_572_p4}}, {trunc_ln254_9_fu_558_p4}}, {trunc_ln254_7_fu_544_p4}}, {trunc_ln254_5_fu_530_p4}}, {trunc_ln254_3_fu_516_p4}}, {trunc_ln254_1_fu_502_p4}};

assign qout_TKEEP = 32'd0;

assign qout_TLAST = set_last_reg_942;

assign qout_TSTRB = 32'd0;

assign sample_V_4_fu_474_p2 = (sample_V_fu_114 + 15'd1);

assign sample_V_5_fu_480_p3 = ((icmp_ln1049_1_fu_469_p2[0:0] == 1'b1) ? 15'd0 : sample_V_4_fu_474_p2);

assign set_last_fu_460_p2 = (tlast & icmp_ln1049_fu_447_p2);

assign trunc_ln254_10_fu_586_p4 = {{comb_6_q0[31:16]}};

assign trunc_ln254_11_fu_568_p1 = comb_5_q0[15:0];

assign trunc_ln254_12_fu_600_p4 = {{comb_7_q0[31:16]}};

assign trunc_ln254_13_fu_582_p1 = comb_6_q0[15:0];

assign trunc_ln254_14_fu_614_p4 = {{comb_8_q0[31:16]}};

assign trunc_ln254_15_fu_596_p1 = comb_7_q0[15:0];

assign trunc_ln254_16_fu_628_p4 = {{comb_9_q0[31:16]}};

assign trunc_ln254_17_fu_610_p1 = comb_8_q0[15:0];

assign trunc_ln254_18_fu_642_p4 = {{comb_10_q0[31:16]}};

assign trunc_ln254_19_fu_624_p1 = comb_9_q0[15:0];

assign trunc_ln254_1_fu_502_p4 = {{comb_0_q0[31:16]}};

assign trunc_ln254_20_fu_656_p4 = {{comb_11_q0[31:16]}};

assign trunc_ln254_21_fu_638_p1 = comb_10_q0[15:0];

assign trunc_ln254_22_fu_670_p4 = {{comb_12_q0[31:16]}};

assign trunc_ln254_23_fu_652_p1 = comb_11_q0[15:0];

assign trunc_ln254_24_fu_684_p4 = {{comb_13_q0[31:16]}};

assign trunc_ln254_25_fu_666_p1 = comb_12_q0[15:0];

assign trunc_ln254_26_fu_698_p4 = {{comb_14_q0[31:16]}};

assign trunc_ln254_27_fu_680_p1 = comb_13_q0[15:0];

assign trunc_ln254_28_fu_749_p4 = {{comb_15_q0[31:16]}};

assign trunc_ln254_29_fu_694_p1 = comb_14_q0[15:0];

assign trunc_ln254_2_fu_512_p1 = comb_1_q0[15:0];

assign trunc_ln254_31_fu_708_p1 = comb_15_q0[15:0];

assign trunc_ln254_3_fu_516_p4 = {{comb_1_q0[31:16]}};

assign trunc_ln254_4_fu_526_p1 = comb_2_q0[15:0];

assign trunc_ln254_5_fu_530_p4 = {{comb_2_q0[31:16]}};

assign trunc_ln254_6_fu_540_p1 = comb_3_q0[15:0];

assign trunc_ln254_7_fu_544_p4 = {{comb_3_q0[31:16]}};

assign trunc_ln254_8_fu_554_p1 = comb_4_q0[15:0];

assign trunc_ln254_9_fu_558_p4 = {{comb_4_q0[31:16]}};

assign trunc_ln254_fu_498_p1 = comb_0_q0[15:0];

assign trunc_ln254_s_fu_572_p4 = {{comb_5_q0[31:16]}};

endmodule //dac_table_axim_dac_table_axim_Pipeline_runloop
